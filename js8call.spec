#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
# Using build pattern: cmake
# autospec version: v3
# autospec commit: c1050fe
#
Name     : js8call
Version  : 2.2.0
Release  : 3
URL      : http://files.js8call.com/2.2.0/js8call-2.2.0.tgz
Source0  : http://files.js8call.com/2.2.0/js8call-2.2.0.tgz
Summary  : No detailed summary available
Group    : Development/Tools
License  : BSL-1.0 GPL-3.0
Requires: js8call-bin = %{version}-%{release}
Requires: js8call-data = %{version}-%{release}
Requires: js8call-license = %{version}-%{release}
BuildRequires : buildreq-cmake
BuildRequires : fftw-dev
BuildRequires : git
BuildRequires : mesa-dev
BuildRequires : pkg-config
BuildRequires : pkgconfig(hamlib)
BuildRequires : qtmultimedia-dev
BuildRequires : qtserialport-dev
BuildRequires : systemd-dev
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}

%description
# JS8Call
JS8Call is an experiment in combining the robustness of FT8 (a weak-signal mode by K1JT) with a messaging and network protocol layer for weak signal communication. The open source software is designed for connecting amateur radio operators who are operating under weak signal conditions and offers real-time keyboard-to-keyboard messaging, store-and-forward messaging, and automatic station announcements.

%package bin
Summary: bin components for the js8call package.
Group: Binaries
Requires: js8call-data = %{version}-%{release}
Requires: js8call-license = %{version}-%{release}

%description bin
bin components for the js8call package.


%package data
Summary: data components for the js8call package.
Group: Data

%description data
data components for the js8call package.


%package doc
Summary: doc components for the js8call package.
Group: Documentation

%description doc
doc components for the js8call package.


%package license
Summary: license components for the js8call package.
Group: Default

%description license
license components for the js8call package.


%prep
%setup -q -n js8call
cd %{_builddir}/js8call

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1701973848
mkdir -p clr-build
pushd clr-build
export GCC_IGNORE_WERROR=1
CLEAR_INTERMEDIATE_CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS -fdebug-types-section -femit-struct-debug-baseonly -fno-lto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FCFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -fdebug-types-section -femit-struct-debug-baseonly -fno-lto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -fdebug-types-section -femit-struct-debug-baseonly -fno-lto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS -fdebug-types-section -femit-struct-debug-baseonly -fno-lto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS"
CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS"
FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS"
FCFLAGS="$CLEAR_INTERMEDIATE_FCFLAGS"
ASFLAGS="$CLEAR_INTERMEDIATE_ASFLAGS"
LDFLAGS="$CLEAR_INTERMEDIATE_LDFLAGS"
%cmake .. -Dhamlib_LIBRARY_DIRS=/usr/lib64
make  %{?_smp_mflags}
popd

%install
export GCC_IGNORE_WERROR=1
CLEAR_INTERMEDIATE_CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS -fdebug-types-section -femit-struct-debug-baseonly -fno-lto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FCFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -fdebug-types-section -femit-struct-debug-baseonly -fno-lto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS -fdebug-types-section -femit-struct-debug-baseonly -fno-lto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CLEAR_INTERMEDIATE_CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS -fdebug-types-section -femit-struct-debug-baseonly -fno-lto -g1 -gno-column-info -gno-variable-location-views -gz=zstd "
CFLAGS="$CLEAR_INTERMEDIATE_CFLAGS"
CXXFLAGS="$CLEAR_INTERMEDIATE_CXXFLAGS"
FFLAGS="$CLEAR_INTERMEDIATE_FFLAGS"
FCFLAGS="$CLEAR_INTERMEDIATE_FCFLAGS"
ASFLAGS="$CLEAR_INTERMEDIATE_ASFLAGS"
LDFLAGS="$CLEAR_INTERMEDIATE_LDFLAGS"
export SOURCE_DATE_EPOCH=1701973848
rm -rf %{buildroot}
mkdir -p %{buildroot}/usr/share/package-licenses/js8call
cp %{_builddir}/js8call/COPYING %{buildroot}/usr/share/package-licenses/js8call/a060d2e79e2c8351d94bb5154772293b5a739edf || :
cp %{_builddir}/js8call/boost/LICENSE_1_0.txt %{buildroot}/usr/share/package-licenses/js8call/bc3c4d41d4cc7753bea8e7a77fdb7cd384adbb59 || :
cp %{_builddir}/js8call/qcustomplot-source/GPL.txt %{buildroot}/usr/share/package-licenses/js8call/8624bcdae55baeef00cd11d5dfcfa60f68710a02 || :
pushd clr-build
%make_install
popd
## Remove excluded files
rm -f %{buildroot}*/usr/bin/rigctl-local
rm -f %{buildroot}*/usr/bin/rigctld-local

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/js8
/usr/bin/js8call

%files data
%defattr(-,root,root,-)
/usr/share/applications/js8call.desktop
/usr/share/js8call/JPLEPH
/usr/share/pixmaps/js8call_icon.png

%files doc
%defattr(0644,root,root,0755)
/usr/share/doc/JS8Call/COPYING
/usr/share/doc/JS8Call/INSTALL
/usr/share/doc/JS8Call/INSTALL-WSJTX
/usr/share/doc/JS8Call/README

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/js8call/8624bcdae55baeef00cd11d5dfcfa60f68710a02
/usr/share/package-licenses/js8call/a060d2e79e2c8351d94bb5154772293b5a739edf
/usr/share/package-licenses/js8call/bc3c4d41d4cc7753bea8e7a77fdb7cd384adbb59
